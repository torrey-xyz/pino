# name: CI

# on:
#   push:
#     branches: [ main, develop ]
#   pull_request:
#     branches: [ main, develop ]

# env:
#   CARGO_TERM_COLOR: always
#   RUST_BACKTRACE: 1

# jobs:
#   test:
#     name: Test Suite
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         rust: [stable, beta, nightly]
#     steps:
#     - uses: actions/checkout@v4
#       with:
#         submodules: recursive
    
#     - name: Install Rust
#       uses: dtolnay/rust-toolchain@master
#       with:
#         toolchain: ${{ matrix.rust }}
#         components: rustfmt, clippy
#         targets: bpf-unknown-unknown
    
#     - name: Cache cargo registry
#       uses: actions/cache@v3
#       with:
#         path: |
#           ~/.cargo/registry
#           ~/.cargo/git
#           target
#         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
#     - name: Install Solana CLI
#       run: |
#         sh -c "$(curl -sSfL https://release.solana.com/v1.18.8/install)"
#         echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
#     - name: Check formatting
#       run: cargo fmt --all -- --check
    
#     - name: Run clippy
#       run: cargo clippy --all-targets --all-features -- -D warnings
    
#     - name: Run tests
#       run: cargo test --all --verbose
    
#     - name: Run integration tests
#       run: cargo test --test integration --verbose
    
#     - name: Build all examples
#       run: |
#         for example in examples/*/; do
#           if [ -f "$example/Cargo.toml" ]; then
#             echo "Building $example"
#             (cd "$example" && cargo build)
#           fi
#         done

#   performance:
#     name: Performance Tests
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#       with:
#         submodules: recursive
    
#     - name: Install Rust
#       uses: dtolnay/rust-toolchain@stable
#       with:
#         targets: bpf-unknown-unknown
    
#     - name: Cache cargo registry
#       uses: actions/cache@v3
#       with:
#         path: |
#           ~/.cargo/registry
#           ~/.cargo/git
#           target
#         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
#     - name: Install Solana CLI
#       run: |
#         sh -c "$(curl -sSfL https://release.solana.com/v1.18.8/install)"
#         echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
#     - name: Run performance benchmarks
#       run: cargo test --test performance --release
    
#     - name: Run CU benchmarks
#       run: cargo test --test cu-benchmarks --release

#   security:
#     name: Security Audit
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
    
#     - name: Install Rust
#       uses: dtolnay/rust-toolchain@stable
    
#     - name: Install cargo-audit
#       run: cargo install cargo-audit
    
#     - name: Run security audit
#       run: cargo audit
    
#     - name: Install cargo-deny
#       run: cargo install cargo-deny
    
#     - name: Run cargo-deny
#       run: cargo deny check

#   docs:
#     name: Documentation
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
    
#     - name: Install Rust
#       uses: dtolnay/rust-toolchain@stable
    
#     - name: Install mdBook
#       run: cargo install mdbook
    
#     - name: Build API documentation
#       run: cargo doc --all --no-deps
    
#     - name: Build book documentation
#       run: mdbook build docs/book
    
#     - name: Deploy to GitHub Pages
#       if: github.ref == 'refs/heads/main'
#       uses: peaceiris/actions-gh-pages@v3
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: ./docs/book/book 